{"version":3,"sources":["Context/ModalContext.tsx","Context/PlaygroundContext.tsx","screens/HomeScreen/LeftPane.tsx","screens/HomeScreen/RightPane.tsx","Components/Modal.tsx","screens/HomeScreen/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["ModalContext","createContext","ModalProvider","_ref","children","_useState","useState","Object","objectSpread","value","type","identifer","folderId","cardId","_useState2","slicedToArray","makeAvailableGlobally","isOpen","setIsOpen","react_default","a","createElement","Provider","PlaygroundContext","PlaygroundProvider","_items","_items2","_useState3","defineProperty","title","items","language","folders","setFolders","StyledLeftPane","styled","div","_templateObject","taggedTemplateLiteral","ContentContainer","_templateObject2","Logo","img","_templateObject3","MainHeading","h1","_templateObject4","SubHeading","h2","_templateObject5","AddNewButton","_templateObject6","LeftPane","src","alt","StyledRightPane","RightPane_templateObject","Header","RightPane_templateObject2","props","variant","Heading","h3","RightPane_templateObject3","size","AddButton","button","RightPane_templateObject4","Folder","RightPane_templateObject5","CardContainer","RightPane_templateObject6","PlaygroundCard","_templateObject7","SmallLogo","_templateObject8","CardContent","_templateObject9","Icons","_templateObject10","RightPane","_Folders","useContext","Folders","entries","map","_ref2","folder","_ref3","_ref4","card","index_esm","bi_index_esm","onClick","ModalContainer","Modal_templateObject","ModalContent","Modal_templateObject2","Modal_templateObject3","CloseButton","Modal_templateObject4","Input","Modal_templateObject5","EditCardModal","console","log","currentFolder","currentCard","Fragment","Modal_Header","className","ri_index_esm","Modal","ModalFeatures","Modal_EditCardModal","HomeScreenContainer","HomeScreen_templateObject","HomeScreen","HomeScreen_LeftPane","HomeScreen_RightPane","Components_Modal","createGlobalStyle","global_templateObject","App","global","screens_HomeScreen","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.301582ce.chunk.js","sourcesContent":["import { createContext, useState } from \"react\";\r\nimport React from \"react\";\r\ninterface PopupFields {\r\n  value: boolean; // if popup open or not\r\n  type: string; // which type of popup is it\r\n  identifer: {\r\n    folderId: string; // the folder which is selected\r\n    cardId: string; // the card which is selected\r\n  };\r\n}\r\n\r\ninterface ModalContextType {\r\n  isOpen: PopupFields;\r\n  setIsOpen: (isOpen: PopupFields) => void;\r\n}\r\n\r\nexport const ModalContext = createContext<ModalContextType | null>(null);\r\n\r\nexport default function ModalProvider({ children }: { children: any }) {\r\n  const initialPopupFields: PopupFields = {\r\n    value: false,\r\n    type: \"\",\r\n    identifer: {\r\n      folderId: \"\",\r\n      cardId: \"\",\r\n    },\r\n  };\r\n\r\n  const [isOpen, setIsOpen] = useState<PopupFields>({ ...initialPopupFields });\r\n\r\n  const makeAvailableGlobally: ModalContextType = {\r\n    isOpen: isOpen,\r\n    setIsOpen: setIsOpen,\r\n  };\r\n\r\n  return (\r\n    <ModalContext.Provider value={makeAvailableGlobally}>\r\n      {children}\r\n    </ModalContext.Provider>\r\n  );\r\n}","import React from \"react\";\r\nimport { createContext, useState } from \"react\";\r\n\r\ninterface PlaygroundContextType {\r\n  folders: any;\r\n  setFolders: any;\r\n}\r\n\r\nexport const PlaygroundContext = createContext<PlaygroundContextType | null>(\r\n  null\r\n);\r\n\r\nexport default function PlaygroundProvider({ children }: { children: any }) {\r\n  const [folders, setFolders] = useState({\r\n    [\"1\"]: {\r\n      title: \"Folder Title 1\",\r\n      items: {\r\n        [\"item1\"]: {\r\n          title: \"Stack Implementation\",\r\n          language: \"C++\",\r\n        },\r\n        [\"item2\"]: {\r\n          title: \"Queue Implementation\",\r\n          language: \"C++\",\r\n        },\r\n        [\"item3\"]: {\r\n          title: \"XYZ Implementation\",\r\n          language: \"C++\",\r\n        },\r\n      },\r\n    },\r\n    [\"2\"]: {\r\n      title: \"Folder Title 2\",\r\n      items: {\r\n        [\"item4\"]: {\r\n          title: \"1 Implementation\",\r\n          language: \"C++\",\r\n        },\r\n        [\"item5\"]: {\r\n          title: \"2 Implementation\",\r\n          language: \"C++\",\r\n        },\r\n        [\"item6\"]: {\r\n          title: \"3 Implementation\",\r\n          language: \"C++\",\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const makeAvailableGlobally: PlaygroundContextType = {\r\n    folders: folders,\r\n    setFolders: setFolders,\r\n  };\r\n\r\n  return (\r\n    <PlaygroundContext.Provider value={makeAvailableGlobally}>\r\n      {children}\r\n    </PlaygroundContext.Provider>\r\n  );\r\n};","// import React from \"react\";\r\n// import styled from \"styled-components\"; \r\n\r\n// //Style this left pane using Typescript\r\n// const StyledLeftPane = styled.div`\r\n//     background: #221f20;\r\n//     display: flex;\r\n//     align-items: center;\r\n//     justify-content: center;\r\n// `;\r\n\r\n// const ContentContainer = styled.div`\r\n//     text-align: center;\r\n// `;\r\n\r\n// const Logo = styled.img`\r\n//     width: 165px;\r\n//     margin-bottom: 1rem;\r\n// `;\r\n\r\n// const MainHeading = styled.h1`\r\n//     font-size: 2.4rem;\r\n//     font-weight: 400;\r\n//     color: white;\r\n//     margin-bottom: 0.75rem;\r\n\r\n//     // hum yaha pe span tage ke liye Css likhe \r\n//     //ne wale hai to eska ek alga technic hai ki es H1 ke under \r\n//     //jitne bhi span tag hoga unsabhi pe ye css apply hoga\r\n\r\n// span{\r\n//     //hum eske under span tag ka css likhengye..\r\n//     font-weight: 700;\r\n// }\r\n\r\n// `;\r\n\r\n// const SubHeading = styled.h2`\r\n//     font-size: 1.5rem;\r\n//     color:white;\r\n//     opacity:75%;\r\n//     margin-bottom: 1.5rem;\r\n//     font-weigth:400; \r\n// `;\r\n\r\n// const AddNewButton = styled.a`\r\n//     padding: 0.25rem 1rem;\r\n//     border-radius: 2rem;\r\n//     background: white;\r\n//     display: flex;\r\n//     align-items: center;\r\n//     justify-content: space-evenly;\r\n//     cursor: pointer;\r\n//     text-decoration: none;\r\n\r\n//     span{\r\n//         font-weight: 900;\r\n//         font-size: 2rem;\r\n//     }\r\n\r\n//     &:hover{\r\n//         opacity: 0.9;\r\n//     }\r\n// `;\r\n\r\n// const LeftPane = () => {\r\n//     return(\r\n//         <StyledLeftPane>\r\n\r\n//         <ContentContainer>\r\n//             <Logo src=\"./logo.png\" alt=\"logo\" />\r\n//             <MainHeading>\r\n//                 <span>Code</span> Deck\r\n//             </MainHeading>\r\n//             <SubHeading>Code. Conpile. Debug. </SubHeading>\r\n//             <AddNewButton href=\"\">\r\n//                 <span>+</span>Create New Playground \r\n//             </AddNewButton>\r\n//         </ContentContainer>\r\n\r\n//         </StyledLeftPane>\r\n//     );\r\n// };\r\n\r\n// export default LeftPane;\r\n\r\n\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledLeftPane = styled.div`\r\n  position: fixed;\r\n  width: 40%;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  background: #221f20;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 165px;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst MainHeading = styled.h1`\r\n  font-size: 2.4rem;\r\n  font-weight: 400;\r\n  color: white;\r\n  margin-bottom: 0.75rem;\r\n  span {\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nconst SubHeading = styled.h2`\r\n  font-size: 1.5rem;\r\n  color: white;\r\n  opacity: 75%;\r\n  margin-bottom: 1.5rem;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst AddNewButton = styled.a`\r\n  padding: 0.25rem 1rem;\r\n  border-radius: 2rem;\r\n  background: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  span {\r\n    font-weight: 700;\r\n    font-size: 2rem;\r\n  }\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n`;\r\n\r\nconst LeftPane = () => {\r\n  return (\r\n    <StyledLeftPane>\r\n      <ContentContainer>\r\n        <Logo src='/logo.png' alt='' />\r\n        <MainHeading>\r\n          <span>Code</span> Deck\r\n        </MainHeading>\r\n        <SubHeading>Code. Compile. Debug.</SubHeading>\r\n        <AddNewButton>\r\n          <span>+</span> Create New Playground\r\n        </AddNewButton>\r\n      </ContentContainer>\r\n    </StyledLeftPane>\r\n  );\r\n};\r\n\r\nexport default LeftPane;","// import React from \"react\";\r\n// import styled from \"styled-components\";\r\n\r\n// const StyledRightPane = styled.div`\r\n//     padding: 2rem;\r\n//     background: #fafafa;\r\n// `;\r\n\r\n// const Header = styled.div`\r\n//     display: flex;\r\n//     align-items: center;\r\n//     justify-content: space-between;\r\n//     position: relative;\r\n//     margin-bottom: ${(props) => props.variant === \"main\" ? \"2.75rem\" : \"1.4rem\"};\r\n//     &::after {\r\n//         position: absolute;\r\n//         content: \"\";\r\n//         bottom: -1.25rem;\r\n//         width: 100%;\r\n//         height: 2px;\r\n//         background: rgba(0, 0, 0, 0.25);\r\n//         display: ${(props) => (props.variant === \"main\" ? \"block\" : \"none\")};\r\n//     }\r\n// `;\r\n\r\n// const Heading = styled.h3`\r\n//     font-weight: 400;\r\n//     font-size: 1.8rem;\r\n\r\n//     span{\r\n//         font-weight: 700;\r\n//     }\r\n// `;\r\n\r\n// const AddButton = styled.button`\r\n//     display: flex;\r\n//     gap: 0.5rem;\r\n//     align-items:center;\r\n//     background: transparent;\r\n//     outline:0;\r\n//     border:0;\r\n//     font-size:1.1rem;\r\n//     cursor: pointer;\r\n\r\n//     span{\r\n//         font-size: 1.7rem;\r\n//         font-weight: 700;\r\n//     }\r\n\r\n//     transition: opacity 0.35s easy;\r\n//     &:hover{\r\n//         opacity: 0.75;\r\n//     }\r\n// `;\r\n\r\n// const RightPane = () => {\r\n//     return (\r\n//     <StyledRightPane>\r\n//         <Header>\r\n//             <Heading>\r\n//             My <span> Playground</span>\r\n//             </Heading>\r\n//             <AddButton>\r\n//                 <span>+</span> New Folder\r\n//             </AddButton>\r\n//         </Header>\r\n//     </StyledRightPane>\r\n//     );\r\n// };\r\n\r\n// export default RightPane;\r\n\r\n\r\n\r\n\r\nimport React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { IoTrashOutline } from \"react-icons/io5\";\r\nimport { BiEditAlt } from \"react-icons/bi\";\r\nimport { ModalContext } from \"../../Context/ModalContext\";\r\n\r\ninterface HeaderProps {\r\n  readonly variant: string;\r\n}\r\n\r\ninterface HeadingProps {\r\n  readonly size: string;\r\n}\r\n\r\nconst StyledRightPane = styled.div`\r\n  padding: 2rem;\r\n  background: #fafafa;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  width: 60%;\r\n`;\r\n\r\nconst Header = styled.div<HeaderProps>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  position: relative;\r\n  margin-bottom: ${(props) =>\r\n    props.variant === \"main\" ? \"2.75rem\" : \"1.4rem\"};\r\n  &::after {\r\n    position: absolute;\r\n    content: \"\";\r\n    bottom: -1.25rem;\r\n    width: 100%;\r\n    height: 2px;\r\n    background: rgba(0, 0, 0, 0.25);\r\n    display: ${(props) => (props.variant === \"main\" ? \"block\" : \"none\")};\r\n  }\r\n`;\r\n\r\nconst Heading = styled.h3<HeadingProps>`\r\n  font-weight: 400;\r\n  font-size: ${(props) => (props.size === \"large\" ? \"1.8rem\" : \"1.5rem\")};\r\n  span {\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nconst AddButton = styled.button`\r\n  display: flex;\r\n  gap: 0.5rem;\r\n  align-items: center;\r\n  background: transparent;\r\n  outline: 0;\r\n  border: 0;\r\n  font-size: 1.1rem;\r\n  cursor: pointer;\r\n  span {\r\n    font-size: 1.75rem;\r\n    font-weight: 700;\r\n  }\r\n  transition: all 0.25s ease;\r\n  &:hover {\r\n    opacity: 0.75;\r\n    scale: 1.1;\r\n  }\r\n`;\r\n\r\nconst Folder = styled.div`\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nconst CardContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  column-gap: 2rem;\r\n  row-gap: 2rem;\r\n`;\r\n\r\nconst PlaygroundCard = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0.6rem;\r\n  gap: 1rem;\r\n  box-shadow: 0px 0px 10px 1px rgba(0, 0, 0, 0.1);\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst SmallLogo = styled.img`\r\n  width: 75px;\r\n`;\r\n\r\nconst CardContent = styled.div`\r\n  flex-grow: 1;\r\n  h5 {\r\n    font-weight: 400;\r\n    font-size: 1.2rem;\r\n    margin-bottom: 0.25rem;\r\n  }\r\n`;\r\n\r\nconst Icons = styled.div`\r\n  display: flex;\r\n  gap: 0.5rem;\r\n  font-size: 1.25rem;\r\n  padding-right: 1rem;\r\n`;\r\n\r\nconst RightPane = () => {\r\n  const makeAvailableGlobally = useContext(ModalContext)!;\r\n  const setIsOpen = makeAvailableGlobally.setIsOpen;\r\n\r\n  // rough structure\r\n  const Folders = {\r\n    [\"1\"]: {\r\n      title: \"Folder Title 1\",\r\n      items: {\r\n        [\"item1\"]: {\r\n          title: \"Stack Implementation\",\r\n          language: \"C++\",\r\n        },\r\n        [\"item2\"]: {\r\n          title: \"Queue Implementation\",\r\n          language: \"C++\",\r\n        },\r\n        [\"item3\"]: {\r\n          title: \"XYZ Implementation\",\r\n          language: \"C++\",\r\n        },\r\n      },\r\n    },\r\n    [\"2\"]: {\r\n      title: \"Folder Title 2\",\r\n      items: {\r\n        [\"item4\"]: {\r\n          title: \"1 Implementation\",\r\n          language: \"C++\",\r\n        },\r\n        [\"item5\"]: {\r\n          title: \"2 Implementation\",\r\n          language: \"C++\",\r\n        },\r\n        [\"item6\"]: {\r\n          title: \"3 Implementation\",\r\n          language: \"C++\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <StyledRightPane>\r\n      <Header variant='main'>\r\n        <Heading size='large'>\r\n          My <span>Playground</span>\r\n        </Heading>\r\n        <AddButton>\r\n          <span>+</span> New Folder\r\n        </AddButton>\r\n      </Header>\r\n\r\n      {Object.entries(Folders).map(([folderId, folder]) => (\r\n        <Folder>\r\n          <Header variant='folder'>\r\n            <Heading size='small'>{folder.title}</Heading>\r\n            <AddButton>\r\n              <span>+</span> New Playground\r\n            </AddButton>\r\n          </Header>\r\n\r\n          <CardContainer>\r\n            {Object.entries(folder.items).map(([cardId, card]) => (\r\n              <PlaygroundCard>\r\n                <SmallLogo src='/logo-small.png' alt='' />\r\n                <CardContent>\r\n                  <h5>{card.title}</h5>\r\n                  <p>Language: {card.language}</p>\r\n                </CardContent>\r\n                <Icons>\r\n                  <IoTrashOutline />\r\n                  <BiEditAlt\r\n                    onClick={() => {\r\n                      setIsOpen({\r\n                        value: true,\r\n                        type: \"1\",\r\n                        identifer: {\r\n                          folderId: folderId,\r\n                          cardId: cardId,\r\n                        },\r\n                      });\r\n                    }}\r\n                  />\r\n                </Icons>\r\n              </PlaygroundCard>\r\n            ))}\r\n          </CardContainer>\r\n        </Folder>\r\n      ))}\r\n    </StyledRightPane>\r\n  );\r\n};\r\n\r\nexport default RightPane;","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { RiCloseFill } from \"react-icons/ri\";\r\nimport { ModalContext } from \"../Context/ModalContext\";\r\nimport { PlaygroundContext } from \"../Context/PlaygroundContext\";\r\n\r\nconst ModalContainer = styled.div`\r\n  background: rgba(0, 0, 0, 0.4);\r\n  width: 100%;\r\n  height: 100vh;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 2;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  background: white;\r\n  width: 35%;\r\n  padding: 2rem;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  background: transparent;\r\n  outline: 0;\r\n  border: 0;\r\n  font-size: 2rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Input = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 1.5rem 0;\r\n  gap: 2rem;\r\n  padding-bottom: 0;\r\n  input {\r\n    flex-grow: 1;\r\n    height: 2rem;\r\n  }\r\n  button {\r\n    background: #241f21;\r\n    height: 2rem;\r\n    color: white;\r\n    padding: 0 2rem;\r\n  }\r\n`;\r\n\r\nconst EditCardModal = ({\r\n  setIsOpen,\r\n  isOpen,\r\n}: {\r\n  setIsOpen: any;\r\n  isOpen: any;\r\n}) => {\r\n  const PlaygroundFeatures = useContext(PlaygroundContext)!;\r\n  const folders = PlaygroundFeatures.folders;\r\n  console.log(isOpen);\r\n\r\n  const currentFolder = folders[isOpen.identifer.folderId];\r\n  console.log(currentFolder.items);\r\n  const currentCard = currentFolder.items[isOpen.identifer.cardId];\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <h2 className='Heading'>Edit Cards Title</h2>\r\n        <CloseButton\r\n          onClick={() => {\r\n            setIsOpen({\r\n              value: false,\r\n              type: \"\",\r\n              identifer: {\r\n                folderId: \"\",\r\n                cardId: \"\",\r\n              },\r\n            });\r\n          }}\r\n        >\r\n          <RiCloseFill />\r\n        </CloseButton>\r\n      </Header>\r\n      <Input>\r\n        <input type='text' value={currentCard.title} />\r\n        <button>Update Title</button>\r\n      </Input>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Modal = () => {\r\n  const ModalFeatures = useContext(ModalContext)!;\r\n  const setIsOpen = ModalFeatures.setIsOpen;\r\n  const isOpen = ModalFeatures.isOpen;\r\n\r\n  return (\r\n    <ModalContainer>\r\n      <ModalContent>\r\n        {isOpen.type === \"1\" && (\r\n          <EditCardModal setIsOpen={setIsOpen} isOpen={isOpen} />\r\n        )}\r\n      </ModalContent>\r\n    </ModalContainer>\r\n  );\r\n};\r\n\r\nexport default Modal;","// import React from \"react\";\r\n// import LeftPane from \"./LeftPane\";\r\n// import RightPane from \"./RightPane\";\r\n// //TypeScripy styling the Home Screen\r\n// import styled from \"styled-components\"; \r\n\r\n//  //this is a typeScript css for Styling\r\n\r\n// const HomeScreenContainer = styled.div`\r\n//     display: grid;\r\n//     grid-template-columns: 1fr 1.5fr;\r\n//     height: 100vh; //vh:- statds for Viewport Height\r\n    \r\n//    `  \r\n\r\n// //Create Functional Components\r\n// const HomeScreen = () =>{\r\n//  return(\r\n//     //ye jo HomeScree Container isko humne Div se replace kiya \r\n//     //hai taki const ke under ka css means Typescript hai uska styling ker sake..\r\n//     <HomeScreenContainer>\r\n//         <LeftPane />\r\n//         <RightPane />\r\n//     </HomeScreenContainer>\r\n\r\n//  );\r\n// };\r\n// export default HomeScreen;\r\n\r\n\r\nimport React, { useContext, useState } from \"react\";\r\nimport LeftPane from \"./LeftPane\";\r\nimport RightPane from \"./RightPane\";\r\nimport styled from \"styled-components\";\r\nimport Modal from \"../../Components/Modal\";\r\nimport { ModalContext } from \"../../Context/ModalContext\";\r\n\r\nconst HomeScreenContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nconst HomeScreen = () => {\r\n  const ModalFeatures = useContext(ModalContext)!;\r\n  const isOpen = ModalFeatures.isOpen;\r\n\r\n  return (\r\n    <HomeScreenContainer>\r\n      <LeftPane />\r\n      <RightPane />\r\n      {isOpen.value === true ? <Modal /> : <></>}\r\n    </HomeScreenContainer>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n    *{\r\n        margin:0;\r\n        padding: 0;\r\n        outline: 0;\r\n        box-sizing: border-box;\r\n        font-family: 'Play', sans-serif;\r\n    }\r\n\r\n`;\r\n","// import React from 'react';\n// import HomeScreen from './screens/HomeScreen';\n// // import LeftPane from './screens/HomeScreen/LeftPane';\n// import GlobalStyles from \"./styles/global\";\n\n// function App() {\n//   return (\n//     <div>\n//       <GlobalStyles />\n//       <HomeScreen />\n//       </div>\n//   );\n// }\n\n// export default App;\n\n\nimport React from \"react\";\nimport ModalProvider from \"./Context/ModalContext\";\nimport PlaygroundProvider from \"./Context/PlaygroundContext\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport GlobalStyles from \"./styles/global\";\n\nfunction App() {\n  return (\n    <PlaygroundProvider>\n      <ModalProvider>\n        <GlobalStyles />\n        <HomeScreen />\n      </ModalProvider>\n    </PlaygroundProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n \nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>   \n    <App />\n  </React.StrictMode>\n);"],"sourceRoot":""}